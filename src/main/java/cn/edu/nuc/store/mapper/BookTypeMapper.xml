<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.store.dao.interfaces.BookTypeMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nuc.store.entity.BookType">
    <id column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="typeHot" jdbcType="INTEGER" property="typehot" />
    <result column="typePid" jdbcType="INTEGER" property="typepid" />
  </resultMap>
  <sql id="Base_Column_List">
    typeId, typeName, typeHot, typePid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from booktype
    where typeId = #{typeid,jdbcType=INTEGER}
  </select>
  
  <select id="findByType" parameterType="int" resultType="Book">
  		select * from book WHERE typeId=#{typeId} LIMIT #{start},#{offset};
  </select>
  
  <select id="findAll" parameterType="int" resultType="Book">
  		select * from book LIMIT #{start},#{offset};
  </select>
  
  <select id="count" parameterType="int" resultType="int">
  	SELECT count(*) from book where typeid=#{typeid}
  </select>
  
  <select id="typeid" parameterType="String" resultType="int">
  	select typeid from booktype WHERE typeName=#{typename}
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from booktype
    where typeId = #{typeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nuc.store.entity.BookType">
    insert into booktype (typeId, typeName, typeHot, 
      typePid)
    values (#{typeid,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, #{typehot,jdbcType=INTEGER}, 
      #{typepid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nuc.store.entity.BookType">
    insert into booktype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeid != null">
        typeId,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="typehot != null">
        typeHot,
      </if>
      <if test="typepid != null">
        typePid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="typehot != null">
        #{typehot,jdbcType=INTEGER},
      </if>
      <if test="typepid != null">
        #{typepid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nuc.store.entity.BookType">
    update booktype
    <set>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="typehot != null">
        typeHot = #{typehot,jdbcType=INTEGER},
      </if>
      <if test="typepid != null">
        typePid = #{typepid,jdbcType=INTEGER},
      </if>
    </set>
    where typeId = #{typeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nuc.store.entity.BookType">
    update booktype
    set typeName = #{typename,jdbcType=VARCHAR},
      typeHot = #{typehot,jdbcType=INTEGER},
      typePid = #{typepid,jdbcType=INTEGER}
    where typeId = #{typeid,jdbcType=INTEGER}
  </update>
</mapper>